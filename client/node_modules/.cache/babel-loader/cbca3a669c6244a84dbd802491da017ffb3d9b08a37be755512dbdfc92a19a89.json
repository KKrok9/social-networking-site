{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useInput = validateValue => {\n  _s();\n  const [enteredValue, setEnteredValue] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n  const valueIsValid = validateValue(enteredValue);\n  const hasError = !valueIsValid && isTouched;\n  const valueChangeHandler = event => {\n    setEnteredValue(event.target.value);\n  };\n  const inputBlurHandler = event => {\n    setIsTouched(true);\n  };\n  return {\n    value: enteredValue,\n    hasError: hasError,\n    valueChangeHandler,\n    inputBlurHandler\n  };\n};\n_s(useInput, \"qlnmfbTzj9Q0H+uTzI/AGYgwaf8=\");\nexport default useInput;\n\n/*\r\nvalidateValue - function which we pass to validate input\r\nenteredVal/setEnteredVal - state of input\r\nisToyched,setIsTouched - we need this to make errors, we cant raise error if input hasnt been touched\r\nvalueIsValud - true/false - using passed function\r\nhasError - if valueIsValid = false and isTouched = true then hasError = true\r\n*/","map":{"version":3,"names":["useState","useInput","validateValue","_s","enteredValue","setEnteredValue","isTouched","setIsTouched","valueIsValid","hasError","valueChangeHandler","event","target","value","inputBlurHandler"],"sources":["C:/Users/kacpe/Desktop/STUDIAA/PAI/social-network-app/social-network-app/client/src/hooks/use-input.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    hasError: hasError,\r\n    valueChangeHandler,\r\n    inputBlurHandler,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n\r\n/*\r\nvalidateValue - function which we pass to validate input\r\nenteredVal/setEnteredVal - state of input\r\nisToyched,setIsTouched - we need this to make errors, we cant raise error if input hasnt been touched\r\nvalueIsValud - true/false - using passed function\r\nhasError - if valueIsValid = false and isTouched = true then hasError = true\r\n*/\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,QAAQ,GAAIC,aAAa,IAAK;EAAAC,EAAA;EAClC,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAMQ,YAAY,GAAGN,aAAa,CAACE,YAAY,CAAC;EAChD,MAAMK,QAAQ,GAAG,CAACD,YAAY,IAAIF,SAAS;EAE3C,MAAMI,kBAAkB,GAAIC,KAAK,IAAK;IACpCN,eAAe,CAACM,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,MAAMC,gBAAgB,GAAIH,KAAK,IAAK;IAClCJ,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,OAAO;IACLM,KAAK,EAAET,YAAY;IACnBK,QAAQ,EAAEA,QAAQ;IAClBC,kBAAkB;IAClBI;EACF,CAAC;AACH,CAAC;AAACX,EAAA,CApBIF,QAAQ;AAsBd,eAAeA,QAAQ;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}