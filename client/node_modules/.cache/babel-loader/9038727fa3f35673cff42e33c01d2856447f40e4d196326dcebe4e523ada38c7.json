{"ast":null,"code":"// NALEZY NAJPIERW SPRAWDZIĆ CZY FORMULARZE NIE SĄ EMPTY\n\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\nconst CheckEmail = email => {\n  return emailRegex.test(email);\n};\n_c = CheckEmail;\nconst CheckIfUserAdult = dateOfBirth => {\n  const MIN_AGE = 16;\n  const currentDate = new Date();\n  const userDateOfBirth = new Date(dateOfBirth);\n  const differenceInMilliseconds = currentDate.getTime() - userDateOfBirth.getTime();\n  const yearsOld = Math.floor(differenceInMilliseconds / (1000 * 60 * 60 * 24 * 365));\n  return yearsOld > MIN_AGE;\n};\n_c2 = CheckIfUserAdult;\nconst CheckPasswordLength = password => {\n  const PASSWORD_LENGTH = 7;\n  return password.length >= PASSWORD_LENGTH;\n};\n_c3 = CheckPasswordLength;\nconst CheckIfPasswordsAreMatching = (password, repeatedPassword) => {\n  return password == repeatedPassword;\n};\n_c4 = CheckIfPasswordsAreMatching;\nconst CheckInputs = (email, password, repeatedPassword, birthdayDate) => {\n  let helper = 0;\n  if (!CheckEmail(email)) {\n    console.log(\"Check your email\");\n    helper++;\n  }\n  if (!CheckPasswordLength(formData.password)) {\n    console.log(\"Password is too short!\");\n    helper++;\n  }\n  if (!CheckIfPasswordsAreMatching(formData.password, formData.repeatedPassword)) {\n    console.log(\"Password arent maching!\");\n    helper++;\n  }\n  if (!CheckIfUserAdult(formData.birthdayDate)) {\n    console.log(\"U are not old enough!\");\n    helper++;\n  }\n  if (helper > 0) {\n    console.log(\"something went wrong\");\n    return false;\n  }\n  if (helper === 0) {\n    console.log(\"inputs are ok\");\n    return true;\n  }\n};\n_c5 = CheckInputs;\nexport { CheckEmail, CheckPasswordLength, CheckIfPasswordsAreMatching, CheckIfUserAdult };\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"CheckEmail\");\n$RefreshReg$(_c2, \"CheckIfUserAdult\");\n$RefreshReg$(_c3, \"CheckPasswordLength\");\n$RefreshReg$(_c4, \"CheckIfPasswordsAreMatching\");\n$RefreshReg$(_c5, \"CheckInputs\");","map":{"version":3,"names":["emailRegex","CheckEmail","email","test","_c","CheckIfUserAdult","dateOfBirth","MIN_AGE","currentDate","Date","userDateOfBirth","differenceInMilliseconds","getTime","yearsOld","Math","floor","_c2","CheckPasswordLength","password","PASSWORD_LENGTH","length","_c3","CheckIfPasswordsAreMatching","repeatedPassword","_c4","CheckInputs","birthdayDate","helper","console","log","formData","_c5","$RefreshReg$"],"sources":["C:/Users/kacpe/Desktop/STUDIAA/PAI/social-network-app/social-network-app/client/src/utils/validation.js"],"sourcesContent":["// NALEZY NAJPIERW SPRAWDZIĆ CZY FORMULARZE NIE SĄ EMPTY\r\n\r\nconst emailRegex = /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i;\r\nconst CheckEmail = (email) => {\r\n  return emailRegex.test(email);\r\n};\r\n\r\nconst CheckIfUserAdult = (dateOfBirth) => {\r\n  const MIN_AGE = 16;\r\n\r\n  const currentDate = new Date();\r\n  const userDateOfBirth = new Date(dateOfBirth);\r\n\r\n  const differenceInMilliseconds =\r\n    currentDate.getTime() - userDateOfBirth.getTime();\r\n  const yearsOld = Math.floor(\r\n    differenceInMilliseconds / (1000 * 60 * 60 * 24 * 365)\r\n  );\r\n\r\n  return yearsOld > MIN_AGE;\r\n};\r\n\r\nconst CheckPasswordLength = (password) => {\r\n  const PASSWORD_LENGTH = 7;\r\n\r\n  return password.length >= PASSWORD_LENGTH;\r\n};\r\n\r\nconst CheckIfPasswordsAreMatching = (password, repeatedPassword) => {\r\n  return password == repeatedPassword;\r\n};\r\n\r\nconst CheckInputs = (email,password,repeatedPassword,birthdayDate) => {\r\n  let helper = 0;\r\n  if (!CheckEmail(email)) {\r\n    console.log(\"Check your email\");\r\n    helper++;\r\n  }\r\n  if (!CheckPasswordLength(formData.password)) {\r\n    console.log(\"Password is too short!\");\r\n    helper++;\r\n  }\r\n  if (\r\n    !CheckIfPasswordsAreMatching(formData.password, formData.repeatedPassword)\r\n  ) {\r\n    console.log(\"Password arent maching!\");\r\n    helper++;\r\n  }\r\n  if (!CheckIfUserAdult(formData.birthdayDate)) {\r\n    console.log(\"U are not old enough!\");\r\n    helper++;\r\n  }\r\n  if (helper > 0) {\r\n    console.log(\"something went wrong\");\r\n    return false;\r\n  }\r\n  if (helper === 0) {\r\n    console.log(\"inputs are ok\");\r\n    return true;\r\n  }\r\n};\r\n\r\nexport {\r\n  CheckEmail,\r\n  CheckPasswordLength,\r\n  CheckIfPasswordsAreMatching,\r\n  CheckIfUserAdult,\r\n};\r\n"],"mappings":"AAAA;;AAEA,MAAMA,UAAU,GAAG,0CAA0C;AAC7D,MAAMC,UAAU,GAAIC,KAAK,IAAK;EAC5B,OAAOF,UAAU,CAACG,IAAI,CAACD,KAAK,CAAC;AAC/B,CAAC;AAACE,EAAA,GAFIH,UAAU;AAIhB,MAAMI,gBAAgB,GAAIC,WAAW,IAAK;EACxC,MAAMC,OAAO,GAAG,EAAE;EAElB,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE;EAC9B,MAAMC,eAAe,GAAG,IAAID,IAAI,CAACH,WAAW,CAAC;EAE7C,MAAMK,wBAAwB,GAC5BH,WAAW,CAACI,OAAO,EAAE,GAAGF,eAAe,CAACE,OAAO,EAAE;EACnD,MAAMC,QAAQ,GAAGC,IAAI,CAACC,KAAK,CACzBJ,wBAAwB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,CAAC,CACvD;EAED,OAAOE,QAAQ,GAAGN,OAAO;AAC3B,CAAC;AAACS,GAAA,GAbIX,gBAAgB;AAetB,MAAMY,mBAAmB,GAAIC,QAAQ,IAAK;EACxC,MAAMC,eAAe,GAAG,CAAC;EAEzB,OAAOD,QAAQ,CAACE,MAAM,IAAID,eAAe;AAC3C,CAAC;AAACE,GAAA,GAJIJ,mBAAmB;AAMzB,MAAMK,2BAA2B,GAAGA,CAACJ,QAAQ,EAAEK,gBAAgB,KAAK;EAClE,OAAOL,QAAQ,IAAIK,gBAAgB;AACrC,CAAC;AAACC,GAAA,GAFIF,2BAA2B;AAIjC,MAAMG,WAAW,GAAGA,CAACvB,KAAK,EAACgB,QAAQ,EAACK,gBAAgB,EAACG,YAAY,KAAK;EACpE,IAAIC,MAAM,GAAG,CAAC;EACd,IAAI,CAAC1B,UAAU,CAACC,KAAK,CAAC,EAAE;IACtB0B,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BF,MAAM,EAAE;EACV;EACA,IAAI,CAACV,mBAAmB,CAACa,QAAQ,CAACZ,QAAQ,CAAC,EAAE;IAC3CU,OAAO,CAACC,GAAG,CAAC,wBAAwB,CAAC;IACrCF,MAAM,EAAE;EACV;EACA,IACE,CAACL,2BAA2B,CAACQ,QAAQ,CAACZ,QAAQ,EAAEY,QAAQ,CAACP,gBAAgB,CAAC,EAC1E;IACAK,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtCF,MAAM,EAAE;EACV;EACA,IAAI,CAACtB,gBAAgB,CAACyB,QAAQ,CAACJ,YAAY,CAAC,EAAE;IAC5CE,OAAO,CAACC,GAAG,CAAC,uBAAuB,CAAC;IACpCF,MAAM,EAAE;EACV;EACA,IAAIA,MAAM,GAAG,CAAC,EAAE;IACdC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;IACnC,OAAO,KAAK;EACd;EACA,IAAIF,MAAM,KAAK,CAAC,EAAE;IAChBC,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;IAC5B,OAAO,IAAI;EACb;AACF,CAAC;AAACE,GAAA,GA5BIN,WAAW;AA8BjB,SACExB,UAAU,EACVgB,mBAAmB,EACnBK,2BAA2B,EAC3BjB,gBAAgB;AAChB,IAAAD,EAAA,EAAAY,GAAA,EAAAK,GAAA,EAAAG,GAAA,EAAAO,GAAA;AAAAC,YAAA,CAAA5B,EAAA;AAAA4B,YAAA,CAAAhB,GAAA;AAAAgB,YAAA,CAAAX,GAAA;AAAAW,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}